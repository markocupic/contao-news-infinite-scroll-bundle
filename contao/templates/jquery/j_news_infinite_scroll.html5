<script>
    (function ($) {
        $(document).ready(function () {
            if (typeof ContaoNewsInfiniteScroll === 'function') {
                /**
                 * Generate the ContaoNewsInfiniteScroll object
                 * requires news_infinite_scroll.js
                 * @type {ContaoNewsInfiniteScroll}
                 */
                new ContaoNewsInfiniteScroll({
                    // CSS selector: Append loaded items to this container
                    newsContainer: '.mod_newslist_infinite_scroll',
                    // CSS selector: Default to $(window)
                    scrollContainer: $(window),
                    // CSS selector: Pagination next (<nav class="pagination block"><ul><li class="next"><a href="newslist.html?page_n343=2" class="next" title="Gehe zu Seite 2">Vorw√§rts</a></li></ul></nav>)
                    paginationNextLink: '.pagination .next > a.next',
                    // CSS selector: Pagination last (<nav class="pagination block"><ul><li class="last"><a href="newslist.html?page_n343=44" class="last" title="Gehe zu Seite 44">Ende</a></li></ul></nav>)
                    paginationLastLink: '.pagination .last > a.last',
                    // When set to true, this will disable infinite scrolling and start firing ajax requests on domready with an interval of 3s
                    loadAllOnDomready: false,
                    // Use a "load more button" (Preserve the accessibility of the footer)
                    // !!!! Important Set loadMoreButton to false, if you want to autoload items
                    loadMoreButton: true,
                    // Load more button markup
                    loadMoreButtonMarkup: '<div class="inf-scr-load-more-btn-container text-center"><button class="btn btn-primary w-100"><?= $GLOBALS['TL_LANG']['MSC']['infScrLoadMore'] ?></button></div>',
                    // CSS selector: When you scroll and the window has reached the anchor point, requests will start
                    anchorPoint: '.mod_newslist_infinite_scroll',
                    // Distance in px from the top of the anchorPoint
                    bottomPixels: 100,
                    // Integer: Fading time for appending news items
                    fadeInTime: 400,
                    // HTML: Show this message during the loading process
                    loadingInProcessContainer: '<div class="inf-scr-loading-in-process-container text-center"><i class="fa fa-5x fa-spinner fa-spin"></i>{{br}}{{br}}<?= $GLOBALS['TL_LANG']['MSC']['infScrLoadingInProcess'] ?>...</em></div>',

                    // Callbacks
                    /**
                     *
                     * @param instance
                     * @return bool
                     */
                    onInitialize: function (instance) {
                        // Hide pagination
                        $(instance.getOption('newsContainer') + ' .pagination').hide();

                        // Return false to abort initialization
                        return true;
                    },

                    /**
                     *
                     * @param instance
                     */
                    onXHRStart: function (instance) {
                        // Do some actions
                    },

                    /**
                     *
                     * @param html
                     * @param instance
                     * @param xhr
                     * @returns string
                     */
                    onXHRComplete: function (html, instance, xhr) {
                        // Do some actions
                        return html;
                    },

                    /**
                     *
                     * @param instance
                     * @param xhr
                     */
                    onXHRFail: function (instance, xhr) {
                        console.error('No response from server with address: ' + instance.currentUrl);
                        console.error('Status code: ' + xhr.status);
                    },

                    /**
                     *
                     * @param instance
                     * @param xhr
                     */
                    onBeforeAppendCallback: function (instance, xhr) {
                        // Do some actions
                        if (instance.response === '') {
                            //instance.response = '<div><h1>Hello world</h1></div>';
                        }
                    },

                    /**
                     *
                     * @param instance
                     * @param xhr
                     */
                    onAppendCallback: function (instance, xhr) {
                        // Do some actions
                    }
                });
            }
        });
    }(jQuery));
</script>
