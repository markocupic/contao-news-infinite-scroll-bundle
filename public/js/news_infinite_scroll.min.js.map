{"version":3,"sources":["news_infinite_scroll.min.js"],"names":["ContaoNewsInfiniteScroll","$","options","_opts","extend","newsContainer","scrollContainer","window","paginationNextLink","paginationLastLink","loadAllOnDomready","loadMoreButton","loadMoreButtonMarkup","anchorPoint","bottomPixels","fadeInTime","loadingInProcessContainer","onInitialize","instance","onXHRStart","onXHRComplete","response","xhr","onXHRFail","onBeforeAppendCallback","onAppendCallback","_self","this","_newsContainer","_anchorPoint","_scrollContainer","_blnLoadingInProcess","_arrUrls","_blnLoadedAllItems","_xhrInterval","blnHasError","currentUrl","urlIndex","loadMoreBtn","getOption","option","_load","ajax","url","beforeSend","attr","addClass","insertAfter","fadeIn","done","data","setTimeout","_appendToDom","_fail","fail","always","remove","length","clearInterval","show","hide","appendTo","next","first","hrefNext","prop","paginationUrlRegexPattern","regexpNext","RegExp","matchNext","exec","console","error","idModule","idNext","parseInt","idLast","last","hrefLast","matchLast","i","replace","push","setInterval","click","event","currentTarget","on","scrollTop","offset","top","innerHeight","height","_initialize","jQuery"],"mappings":"AAAA;;;;;;;GAUA,IAAIA,0BAEJ,SAAWC,GAKPD,yBAA2B,SAAUE,GACjC,IAAIC,EAAQF,EAAEG,OAAO,CAIjBC,cAAe,gCAEfC,gBAAiBL,EAAEM,QAEnBC,mBAAoB,6BAEpBC,mBAAoB,6BAEpBC,mBAAmB,EAGnBC,gBAAgB,EAEhBC,qBAAsB,oKAEtBC,YAAa,gCAEbC,aAAc,IAEdC,WAAY,IAEZC,0BAA2B,iMAG3BC,aAAc,SAAUC,KAGxBC,WAAY,SAAUD,KAGtBE,cAAe,SAAUC,EAAUH,EAAUI,GACzC,OAAOD,GAEXE,UAAW,SAAUL,EAAUI,KAG/BE,uBAAwB,SAAUN,EAAUI,KAG5CG,iBAAkB,SAAUP,EAAUI,MAGvCpB,GAAW,IAGVwB,EAAQC,KACRC,EAAiB,KACjBC,EAAe,KACfC,EAAmB,KACnBC,GAAuB,EACvBC,EAAW,GACXC,GAAqB,EACrBC,EAAe,KAGnBR,EAAMS,aAAc,EACpBT,EAAMU,WAAa,GACnBV,EAAMW,SAAW,EACjBX,EAAML,SAAW,GACjBK,EAAMY,YAAc,KACpBZ,EAAMJ,IAAM,KAUZK,KAAKY,UAAY,SAAUC,GACvB,YAA6B,IAAlBrC,EAAMqC,IACNrC,EAAMqC,IAWrB,IAuGIC,EAAQ,YAEqB,IAAzBV,IAAwD,IAAvBE,IACrCP,EAAMS,aAAc,EAEpBT,EAAMU,WAAaJ,EAASN,EAAMW,UAAU,iBACZ,IAArBX,EAAMU,WACbV,EAAMJ,IAAMrB,EAAEyC,KAAK,CACfC,IAAKjB,EAAMU,WACXQ,WAAY,KAERzC,EAAMgB,WAAWO,GAGjBzB,EAAE2B,GAAgBiB,KAAK,YAAa,QAEpCd,GAAuB,EACgB,IAAnC5B,EAAMa,2BAENf,EAAEE,EAAMa,2BACP8B,SAAS,wCACTC,YAAYnB,GACZoB,OAAO,QAGjBC,KAAMC,IACLxB,EAAMS,aAAc,EACpBT,EAAML,SAAW6B,EAGjBxB,EAAML,SAAWlB,EAAMiB,cAAcM,EAAML,SAAUK,EAAOA,EAAMJ,MAExC,IAAtBI,EAAMS,aACNT,EAAMW,WACNc,WAAW,KACPC,KACD,MAEHC,MAELC,KAAK,KACJD,MACDE,OAAO,KACNJ,WAAW,KAEPlD,EAAE,yCAAyCuD,SAG3CvD,EAAE2B,GAAgBiB,KAAK,YAAa,SAEhCb,EAASyB,SAAW/B,EAAMW,WAE1BJ,GAAqB,EAGjBhC,EAAEyB,EAAMY,aAAamB,SACrB/B,EAAMY,YAAYkB,SAClB9B,EAAMY,YAAc,WAII,IAAjBJ,GACPwB,cAAcxB,IAII,OAAtBR,EAAMY,aACNZ,EAAMY,YAAYqB,OAGtB5B,GAAuB,GACxB,QAGPE,GAAqB,OACO,IAAjBC,GACPwB,cAAcxB,MAStBmB,EAAQ,WAERtB,GAAuB,EAEvB5B,EAAMoB,UAAUG,EAAOA,EAAMJ,MAO7B8B,EAAe,WAGfjD,EAAMqB,uBAAuBE,EAAOA,EAAMJ,KAEpB,IAAlBI,EAAML,UAENpB,EAAEyB,EAAML,UACPuC,OACAC,SAASjC,GACToB,OAAO7C,EAAMY,YAIlBZ,EAAMsB,iBAAiBC,EAAOA,EAAMJ,OArNtB,WAEd,IAAkC,IAA9BnB,EAAMc,aAAaS,KAKvBE,EAAiB3B,EAAEE,EAAME,eAAe,QACV,IAAnBuB,GAK4D,IAAnE3B,EAAEE,EAAME,cAAgB,IAAMF,EAAMK,oBAAoBiD,QAA5D,CAMA,GAAIxD,EAAEE,EAAME,cAAgB,IAAMF,EAAMK,oBAAoBiD,OAAQ,CAEhE,IAAIK,EAAO7D,EAAEE,EAAME,cAAgB,IAAMF,EAAMK,oBAAoBuD,QAC/DC,EAAW/D,EAAE6D,GAAMG,KAAK,QAExBC,EAA4B,sBAC5BC,EAAa,IAAIC,OAAOF,EAA2B,KACnDG,EAAYF,EAAWG,KAAKN,GAChC,IAAKK,EAGD,YAFAE,QAAQC,MAAM,6FAA+FN,EAA4B,MAI7I,IAAIO,EAAWJ,EAAU,GACrBK,EAASC,SAASN,EAAU,IAC5BO,EAASF,EAGb,GAAIzE,EAAEE,EAAME,cAAgB,IAAMF,EAAMM,oBAAoBgD,OAAS,EAAG,CAEpE,IAAIoB,EAAO5E,EAAEE,EAAME,cAAgB,IAAMF,EAAMM,oBAAoBsD,QAC/De,EAAW7E,EAAE4E,GAAMZ,KAAK,QAGxBc,EADa,IAAIX,OAAOF,EAA2B,KAC5BI,KAAKQ,GAC5BC,IAEAH,EAASD,SAASI,EAAU,KAKpC,IAAK,IAAIC,EAAIN,EAAQM,GAAKJ,EAAQI,IAAK,CACnC,IAAIrC,EAAMqB,EAASiB,QAAQd,EAAY,SAAWM,EAAW,IAAMO,GACnEhD,EAASkD,KAAKvC,IAKtBb,EAAmB7B,EAAEE,EAAMG,iBAAiB,QACZ,IAArBwB,GAMgB,IAAvB3B,EAAMW,eACNX,EAAMW,aAAe,GAIzBe,EAAe5B,EAAE2B,QACsB,IAA5B3B,EAAEE,EAAMU,aAAa,KAC5BgB,EAAe5B,EAAEE,EAAMU,aAAa,KAKR,IAA5BV,EAAMO,mBACN+B,IACAP,EAAeiD,YAAY1C,EAAO,OACF,IAAzBtC,EAAMQ,gBACbe,EAAMY,YAAcrC,EAAEE,EAAMS,sBAC5Bc,EAAMY,YACLS,YAAYnB,GACZkB,SAAS,mCACTsC,MAAMC,IACHpF,EAAEoF,EAAMC,eAAe1B,OACvBnB,OAIJxC,EAAE6B,GAAkByD,GAAG,SAAU,KACzBtF,EAAE6B,GAAkB0D,YAAevF,EAAE4B,GAAc4D,SAASC,IAAMzF,EAAE4B,GAAc8D,cAAgB1F,EAAE6B,GAAkB8D,SAAWzF,EAAMW,cACvI2B,OAjCR8B,QAAQC,MAAM,8EA6JtBqB,IAtTR,CAwTGC","file":"news_infinite_scroll.min.js","sourcesContent":["\"use strict\";\n\n/*\n * This file is part of Resource Booking Bundle.\n *\n * (c) Marko Cupic 2021 <m.cupic@gmx.ch>\n * @license LGPL-3.0+\n * @link https://github.com/markocupic/contao-news-infinite-scroll-bundle\n */\n\nlet ContaoNewsInfiniteScroll;\n\n(function ($) {\n    /**\n     * @param options\n     * @constructor\n     */\n    ContaoNewsInfiniteScroll = function (options) {\n        let _opts = $.extend({\n            // Defaults\n\n            // CSS selector: Append loaded items to this container\n            newsContainer: '.mod_newslist_infinite_scroll',\n            // CSS selector: Default to $(window)\n            scrollContainer: $(window),\n            // CSS selector: Pagination next  (<nav class=\"pagination block\"><ul><li class=\"next\"><a href=\"newslist.html?page_n343=2\" class=\"next\" title=\"Gehe zu Seite 2\">Vorw√§rts</a></li></ul></nav>)\n            paginationNextLink: '.pagination .next > a.next',\n            // CSS selector: Pagination last  (<nav class=\"pagination block\"><ul><li class=\"last\"><a href=\"newslist.html?page_n343=44\" class=\"last\" title=\"Gehe zu Seite 44\">Ende</a></li></ul></nav>)\n            paginationLastLink: '.pagination .last > a.last',\n            // When set to true, this will disable infinite scrolling and start firing ajax requests on domready with an interval of 3s\n            loadAllOnDomready: false,\n            // Use a \"load more button\" (Preserve the accessibility of the footer)\n            // !!!! Important Set loadMoreButton to false, if you want to autoload items\n            loadMoreButton: true,\n            // Load more button markup\n            loadMoreButtonMarkup: '<div class=\"inf-scr-load-more-btn-container text-center\"><button class=\"btn btn-primary w-100\"><?= $GLOBALS[\"TL_LANG\"][\"MSC\"][\"infScrLoadMore\"] ?></button></div>',\n            // CSS selector: When you scroll and the window has reached the anchor point, requests will start\n            anchorPoint: '.mod_newslist_infinite_scroll',\n            // Distance in px from the top of the anchorPoint\n            bottomPixels: 100,\n            // Integer: Fading time for appending news items\n            fadeInTime: 400,\n            // HTML: Show this message during the loading process\n            loadingInProcessContainer: '<div class=\"inf-scr-loading-in-process-container text-center\"><i class=\"fa fa-5x fa-spinner fa-spin\"></i>{{br}}{{br}}<?= $GLOBALS[\"TL_LANG\"][\"MSC\"][\"infScrLoadingInProcess\"] ?>...</em></div>',\n\n            // Callbacks\n            onInitialize: function (instance) {\n                //\n            },\n            onXHRStart: function (instance) {\n                //\n            },\n            onXHRComplete: function (response, instance, xhr) {\n                return response;\n            },\n            onXHRFail: function (instance, xhr) {\n                //\n            },\n            onBeforeAppendCallback: function (instance, xhr) {\n                //\n            },\n            onAppendCallback: function (instance, xhr) {\n                //\n            }\n        }, options || {});\n\n        // Private variables\n        let _self = this;\n        let _newsContainer = null;\n        let _anchorPoint = null;\n        let _scrollContainer = null;\n        let _blnLoadingInProcess = false;\n        let _arrUrls = [];\n        let _blnLoadedAllItems = false;\n        let _xhrInterval = null;\n\n        // Public variables\n        _self.blnHasError = false;\n        _self.currentUrl = '';\n        _self.urlIndex = 0;\n        _self.response = '';\n        _self.loadMoreBtn = null;\n        _self.xhr = null;\n\n\n        /** Public Methods **/\n\n        /**\n         * Get option\n         * @param option\n         * @returns {boolean|string}\n         */\n        this.getOption = function (option) {\n            if (typeof _opts[option] !== 'undefined') {\n                return _opts[option];\n            }\n            return false;\n        };\n\n        /** Private Methods **/\n\n        /**\n         * Initialize application\n         * @private\n         */\n        let _initialize = function () {\n            // Trigger onInitialize-callback\n            if (_opts.onInitialize(_self) !== true) {\n                return;\n            }\n\n            // newsContainer\n            _newsContainer = $(_opts.newsContainer)[0];\n            if (typeof _newsContainer === 'undefined') {\n                return;\n            }\n\n            // If there is no pagination, there are no news items to load\n            if ($(_opts.newsContainer + ' ' + _opts.paginationNextLink).length === 0) {\n                // Skip initialization process\n                return;\n            }\n\n            // Get request urls from pagination links\n            if ($(_opts.newsContainer + ' ' + _opts.paginationNextLink).length) {\n                // get first request url\n                let next = $(_opts.newsContainer + ' ' + _opts.paginationNextLink).first();\n                let hrefNext = $(next).prop('href');\n                // page_n(\\\\d*)=(\\\\d*)/g;\n                let paginationUrlRegexPattern = 'page_n(\\\\d*)=(\\\\d*)';\n                let regexpNext = new RegExp(paginationUrlRegexPattern, \"g\");\n                let matchNext = regexpNext.exec(hrefNext);\n                if (!matchNext) {\n                    console.error('News infinite scroll initialization aborted! Could not find pagination link with pattern \"' + paginationUrlRegexPattern + '\".');\n                    // Skip initialization process\n                    return;\n                }\n                let idModule = matchNext[1]\n                let idNext = parseInt(matchNext[2]);\n                let idLast = idNext;\n\n                // if the next url is same to last url there is no last url\n                if ($(_opts.newsContainer + ' ' + _opts.paginationLastLink).length > 0) {\n                    // get last request url\n                    let last = $(_opts.newsContainer + ' ' + _opts.paginationLastLink).first();\n                    let hrefLast = $(last).prop('href');\n                    // page_n(\\\\d*)=(\\\\d*)/g;\n                    let regexpLast = new RegExp(paginationUrlRegexPattern, \"g\");\n                    let matchLast = regexpLast.exec(hrefLast);\n                    if (matchLast) {\n                        // Overwrite idLast\n                        idLast = parseInt(matchLast[2]);\n                    }\n                }\n\n                // Generate all urls from first to last\n                for (let i = idNext; i <= idLast; i++) {\n                    let url = hrefNext.replace(regexpNext, 'page_n' + idModule + '=' + i);\n                    _arrUrls.push(url);\n                }\n            }\n\n            // scrollContainer\n            _scrollContainer = $(_opts.scrollContainer)[0];\n            if (typeof _scrollContainer === 'undefined') {\n                console.error('ContaoNewsInfiniteScroll aborted! Please select a valid scroll container.');\n                return;\n            }\n\n            // Bottom Pixels\n            if (_opts.bottomPixels === 0) {\n                _opts.bottomPixels = 1;\n            }\n\n            // anchor points settings\n            _anchorPoint = $(_newsContainer);\n            if (typeof $(_opts.anchorPoint)[0] !== 'undefined') {\n                _anchorPoint = $(_opts.anchorPoint)[0];\n            }\n\n\n            // Load elements on domready or load them when scrolling to the bottom\n            if (_opts.loadAllOnDomready === true) {\n                _load();\n                _xhrInterval = setInterval(_load, 3000);\n            } else if (_opts.loadMoreButton === true) {\n                _self.loadMoreBtn = $(_opts.loadMoreButtonMarkup);\n                _self.loadMoreBtn\n                .insertAfter(_newsContainer)\n                .addClass('inf-scr-load-more-btn-container')\n                .click(event => {\n                    $(event.currentTarget).hide();\n                    _load();\n                });\n            } else {\n                // load content by event scroll\n                $(_scrollContainer).on('scroll', () => {\n                    if ($(_scrollContainer).scrollTop() > ($(_anchorPoint).offset().top + $(_anchorPoint).innerHeight() - $(_scrollContainer).height() - _opts.bottomPixels)) {\n                        _load();\n                    }\n                });\n            }\n        };\n\n        /**\n         * Fetch html from server\n         * @private\n         */\n        let _load = function () {\n\n            if (_blnLoadingInProcess === true || _blnLoadedAllItems === true) return;\n            _self.blnHasError = false;\n\n            _self.currentUrl = _arrUrls[_self.urlIndex]+'&ajaxCall';\n            if (typeof _self.currentUrl !== 'undefined') {\n                _self.xhr = $.ajax({\n                    url: _self.currentUrl,\n                    beforeSend: () => {\n                        // Trigger onXHRStart-Callback\n                        _opts.onXHRStart(_self);\n\n                        // Set aria-busy propery to true\n                        $(_newsContainer).attr('aria-busy', 'true');\n\n                        _blnLoadingInProcess = true;\n                        if (_opts.loadingInProcessContainer != '') {\n                            // Append Load Icon\n                            $(_opts.loadingInProcessContainer)\n                            .addClass('inf-scr-loading-in-process-container')\n                            .insertAfter(_newsContainer)\n                            .fadeIn(100);\n                        }\n                    }\n                }).done((data) => {\n                    _self.blnHasError = false;\n                    _self.response = data;\n\n                    // Trigger onXHRComplete\n                    _self.response = _opts.onXHRComplete(_self.response, _self, _self.xhr);\n\n                    if (_self.blnHasError === false) {\n                        _self.urlIndex++;\n                        setTimeout(() => {\n                            _appendToDom();\n                        }, 1000);\n                    } else {\n                        _fail();\n                    }\n                }).fail(() => {\n                    _fail();\n                }).always(() => {\n                    setTimeout(() => {\n                        // Remove Load Icon\n                        $('.inf-scr-loading-in-process-container').remove();\n\n                        // Set aria-busy propery to false\n                        $(_newsContainer).attr('aria-busy', 'false');\n                        // If all items are loaded...\n                        if (_arrUrls.length === _self.urlIndex) {\n                            // Set _blnLoadedAllItems to true\n                            _blnLoadedAllItems = true;\n\n                            // Remove the loadMoreButton\n                            if ($(_self.loadMoreBtn).length) {\n                                _self.loadMoreBtn.remove();\n                                _self.loadMoreBtn = null;\n                            }\n\n                            // Clear the autoloadInterval\n                            if (typeof _xhrInterval !== 'undefined') {\n                                clearInterval(_xhrInterval);\n                            }\n                        }\n\n                        if (_self.loadMoreBtn !== null) {\n                            _self.loadMoreBtn.show();\n                        }\n\n                        _blnLoadingInProcess = false;\n                    }, 1000);\n                })\n            } else {\n                _blnLoadedAllItems = true;\n                if (typeof _xhrInterval !== 'undefined') {\n                    clearInterval(_xhrInterval);\n                }\n            }\n        };\n\n        /**\n         * Fail method\n         * @private\n         */\n        let _fail = function () {\n\n            _blnLoadingInProcess = false;\n            // Trigger onXHRFail-callback\n            _opts.onXHRFail(_self, _self.xhr);\n        };\n\n        /**\n         * Append html to target container\n         * @private\n         */\n        let _appendToDom = function () {\n\n            // Trigger onBeforeAppendCallback\n            _opts.onBeforeAppendCallback(_self, _self.xhr);\n\n            if (_self.response != '') {\n                // Append html to dom and fade in\n                $(_self.response)\n                .hide()\n                .appendTo(_newsContainer)\n                .fadeIn(_opts.fadeInTime);\n            }\n\n            // Trigger onAppendCallback\n            _opts.onAppendCallback(_self, _self.xhr);\n        };\n\n        // Start procedure\n        _initialize();\n    };\n})(jQuery);\n"]}